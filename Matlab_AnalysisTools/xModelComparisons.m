% xModelComparisons.m

% Comparing the results of Fabber ModelFits (simulated data)

% MT Cherukara
% 6 December 2018

% Actively used as of 2019-01-31


clear;
close all;

setFigureDefaults;


% Select the rows we want to plot
plotrows = [15,16,17,18];
lnprop = {'-','-','-','-','-','-'};


%% Simulated SDR data for Chapter 3 (FEB-MAR 2019)

% Row Names
rnames = {'L Model (LS)'     ; ...   %  1 - L model, MATLAB
          'L Model (VB)'     ; ...   %  2 - L model, VB
          '1C Model (VB)'    ; ...   %  3 - 1C model, new thresholding
          '1C Model (VB)'    ; ...   %  4 - 1C model, new, with std thresholding
          '2C Model (VB)'    ; ...   %  5 - 2C model, new thresholding
          '2C Model (VB)'    ; ...   %  6 - 2C model, new, with std thresholding
          'L Model (7\tau)'  ; ...   %  7 - 2C model, 7 taus, MATLAB
          '1C Model (7\tau)' ; ...   %  8 - 2C model, 7 taus, VB with 1C model
          '2C Model (7\tau)' ; ...   %  9 - 2C model, 7 taus, VB with 2C model
          'L Model (11\tau)' ; ...   % 10 - 2C model, 11 taus, MATLAB
          '1C Model (11\tau)'; ...   % 11 - 2C model, 11 taus, VB with 1C model
          '2C Model (11\tau)'; ...   % 12 - 2C model, 11 taus, VB with 2C model
          '1C Model (LS)'    ; ...   % 13 - 1C model, NLLS
          '2C Model (LS)'    ; ...   % 14 - 2C model, NLLS
          'L Model (LS)'     ; ...   % 15 - High DBV, L MATLAB
          'L Model (VB)'     ; ...   % 16 - High DBV, L VB
          '1C Model (VB)'    ; ...   % 17 - High DBV, 1C VB
          '2C Model (VB)'    ; ...   % 18 - High DBV, 2C VB
          };
      
% Figure 3 (2nd version), uses [1,2,4,6]
     
% SNR values
SNR = [ 5, 10, 25, 50, 100, 200, 500 ];


% SNR        5         10         25         50        100        200        500
Err_OEF = [ 27.7000,   22.7000,   15.8000,   11.6000,    7.8000,    5.6700,    4.5000; ...  % 1
            26.3000,   21.6000,   14.9000,   10.6000,    7.5500,    5.5600,    4.5100; ...  % 2
            25.2000,   20.8000,   14.6000,   11.1000,    8.2700,    6.7300,    5.8100; ...  % 3
            22.1000,   17.5000,   12.2000,    8.8300,    6.3200,    5.2100,    4.6800; ...  % 4
            24.6000,   20.2000,   14.4000,   10.8000,    8.0300,    6.3500,    5.5300; ...  % 5
            21.5000,   17.3000,   12.2000,    9.0000,    6.7400,    5.4900,    4.8600; ...  % 6
            35.8000,   32.0000,   27.2000,   23.5000,   21.9000,   21.1000,   20.7000; ...  % 7
            28.3000,   27.8000,   24.5000,   22.3000,   21.2000,   20.4000,   20.1000; ...  % 8
            26.7000,   25.5000,   23.0000,   21.6000,   20.9000,   20.4000,   19.8000; ...  % 9
            33.0800,   29.2500,   23.9800,   21.6200,   20.5000,   20.1300,   20.0200; ...  % 10
            26.8400,   24.9200,   21.6200,   20.9500,   20.0200,   20.0100,   20.0600; ...  % 11
            27.7000,   25.4000,   21.6600,   21.1800,   20.1100,   19.9300,   19.9200; ...  % 12
            36.6200,   32.3700,   30.6000,   29.3000,   29.2000,   29.2000,   28.2000; ...  % 13
            26.8700,   23.7700,   22.4500,   22.7700,   23.4000,   21.7500,   22.8200; ...  % 14
            34.3700,   34.6600,   15.5300,    6.3700,    3.5500,    2.6300,    2.3500; ...  % 15
            36.8200,   33.5200,   11.2400,    5.3300,    3.2100,    2.2900,    2.2100; ...  % 16
            65.1000,   45.4600,   14.6700,    5.1200,    3.1700,    2.7200,    2.6300; ...  % 17
            61.7900,   43.6000,   14.0300,    5.0500,    3.1900,    2.7800,    2.7000; ...  % 18
            ];

% SNR        5         10         25         50        100        200        500
Err_DBV = [ 17.7000,    7.9800,    3.2700,    1.9400,    1.2600,    0.9800,    0.8600; ...
            17.6000,    8.3100,    3.3000,    1.8000,    1.2300,    0.9600,    0.8600; ...
            12.1000,    7.4000,    3.4600,    2.1500,    1.4500,    1.1900,    1.0300; ...
            15.1000,    7.6300,    3.3600,    1.7800,    1.1900,    1.0100,    0.9500; ...
            11.7000,    7.1500,    3.5800,    1.8000,    1.3700,    1.0100,    0.9100; ...
            13.2000,    7.1200,    2.7500,    1.4800,    1.0000,    0.7900,    0.7700; ...
            22.1000,   10.6000,    4.4700,    2.5100,    1.4900,    1.0300,    0.8000; ...
            10.6000,    7.9600,    4.5700,    2.6600,    1.7600,    1.3100,    1.1200; ...
            11.8000,    8.3800,    4.6000,    2.7200,    1.7800,    1.4000,    1.1700; ...
            17.6100,    8.7800,    3.7400,    2.0600,    1.2700,    0.8400,    0.6500; ...
            13.9000,    9.4700,    4.7400,    2.5000,    1.4700,    1.0400,    0.8700; ...
            13.2700,    7.6800,    4.1200,    2.2400,    1.2300,    0.8100,    0.6400; ... 
            19.2090,   12.9410,    8.6360,    7.7440,    7.6610,    7.6950,    7.7120; ... 
            20.6180,   13.8950,    8.6330,    6.8340,    5.9250,    5.4370,    5.2080; ...
            17.5300,    8.2600,    3.9700,    2.4300,    1.9300,    1.7700,    1.7100; ...
            13.9300,    7.2300,    3.4800,    2.1300,    1.8300,    1.6700,    1.6500; ...
            13.1900,    8.2300,    3.7800,    2.2900,    1.8300,    1.7500,    1.7400; ...
            10.7800,    6.2900,    2.9000,    1.6400,    1.2200,    1.1100,    1.1100; ...
            ];

% SNR        5         10         25         50        100        200        500
Err_R2p = [  5.2500,    3.3300,    2.6800,    2.5300,    2.4800,    2.4500,    2.3900; ...
             4.0900,    2.9900,    2.6300,    2.5200,    2.4700,    2.4400,    2.3900; ...
             4.4400,    3.3200,    2.6400,    2.5500,    2.4700,    2.4500,    2.4100; ...
             5.9300,    4.0000,    3.0800,    2.7700,    2.6300,    2.5600,    2.4800; ...
             3.4700,    2.7300,    2.3400,    2.3000,    2.2700,    2.2300,    2.2000; ...
             4.2300,    3.2900,    2.6300,    2.4500,    2.3500,    2.2800,    2.2300; ...
             6.1200,    3.7900,    2.6400,    2.3900,    2.3200,    2.3000,    2.2900; ...
             4.3600,    3.1300,    2.4200,    2.2100,    2.1500,    2.1200,    2.1200; ...
             3.8700,    2.6800,    2.1800,    2.0300,    2.0100,    1.9900,    1.9800; ...
             4.5600,    3.0900,    2.4300,    2.2700,    2.2300,    2.2000,    2.1800; ...
             5.1300,    4.0400,    2.9100,    2.5800,    2.4200,    2.3500,    2.3100; ...
             4.0200,    3.0700,    2.5500,    2.3500,    2.2100,    2.1500,    2.1200; ...
             4.7030,    2.9230,    2.3510,    2.2140,    2.2770,    2.2080,    2.2150; ...
             3.5200,    1.9980,    1.2780,    1.0480,    0.9890,    0.9750,    0.9760; ...
             7.8200,    5.2500,    4.5900,    4.4900,    4.4800,    4.4800,    4.4800; ...
             5.1700,    4.6000,    4.4800,    4.4400,    4.4500,    4.4600,    4.4500; ...
             5.5300,    4.7900,    4.5200,    4.4900,    4.4900,    4.4800,    4.4800; ...
             4.1000,    3.8300,    3.8900,    3.9400,    3.9400,    3.9300,    3.9400; ...
             ];

% SNR          5         10        25        50       100       200       500
Rel_All = [  763.0,     390.3,    176.7,    106.4,     66.1,     64.8,     43.5; ...
             764.9,     404.7,    176.9,    104.8,     69.8,     52.0,     43.8; ...
             581.5,     384.3,    560.2,    159.9,    116.1,     98.6,     79.0; ...
             416.3,     251.2,    150.4,     77.1,     56.0,     47.8,     45.7; ...
             617.4,     506.6,    329.1,    167.1,    145.6,    110.1,     98.1; ...
             356.1,     341.3,    134.0,     80.7,     71.3,     49.1,     44.2; ...
             969.4,     522.2,    231.7,    148.9,    110.8,     89.3,     80.1; ...
             436.3,     366.2,    285.5,    186.7,    157.9,    129.4,    113.7; ...
             559.6,     458.0,    328.1,    248.0,    208.9,    198.0,    183.0; ...
             859.3,     463.5,    207.8,    134.2,    100.4,     85.2,     76.8; ...
             463.1,     310.2,    186.5,    134.8,     97.4,     89.6,     82.4; ...
             442.1,     237.2,    185.7,    159.2,     97.2,     81.2,     75.6 ];
  
   
%% Plotting SNR comparisons

% Pull out the rows we want
npr = length(plotrows);
rlabels = rnames(plotrows);

% modified SNR
% modSNR = repmat(SNR,length(nmes),1)./repmat(sqrt(nmes)',1,length(SNR));


% Plot R2p Error
figure; box on;    
for pp = 1:npr
    semilogx(SNR,abs(Err_R2p(plotrows(pp),:))',lnprop{pp},'Color',defColour(pp));
    hold on;
end

ylabel('R_2'' Error (s^-^1)');
xlabel('SNR');
legend(rlabels{:});
xlim([4,600]);
ylim([0,6.5]);
xticks(SNR);
axis square;

% Plot DBV Error
Max_DBV = 21;
% Err_DBV(abs(Err_DBV) > Max_DBV) = Max_DBV;
figure; box on;
for pp = 1:npr
    semilogx(SNR,abs(Err_DBV(plotrows(pp),:))',lnprop{pp},'Color',defColour(pp));
    hold on;
end

ylabel('DBV Error (%)');
xlabel('SNR');
legend(rlabels{:});
xlim([4,600]);
ylim([0, Max_DBV]);
xticks(SNR);
yticks(0:5:Max_DBV);
axis square;

% Plot OEF Error
figure; box on;
for pp = 1:npr
    semilogx(SNR,abs(Err_OEF(plotrows(pp),:))',lnprop{pp},'Color',defColour(pp));
    hold on;
end

ylabel('OEF Error (%)');
xlabel('SNR');
legend(rlabels{:},'Location','SouthWest');
xlim([4,600]);
ylim([0,38]);
xticks(SNR);
axis square;

% % Plot Total Relative Error
% Max_Rel = 400;
% Rel_All(Err_DBV > Max_Rel) = Max_Rel;
% figure; box on;
% semilogx(SNR,Rel_All(plotrows,:));
% hold on;
% ylabel('Total Relative Error (%)');
% xlabel('SNR');
% legend(rlabels{:});
% xlim([4,600]);
% ylim([0, Max_Rel]);
% xticks(SNR);