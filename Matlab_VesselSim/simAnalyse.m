% simAnalyse.m
% 
% Analysis of vessel simulation data generated by simrun.m (which calls the
% function simplevesselsim.m). This script should be a GUI-based anaylis
% tool, allowing the user to select a saved .mat file (which should contain
% 1 or 2 stored phase matrices, and a p structure containing all parameter
% information, and maybe some other stuff).
%
% The actual calculations of the anaylsis will generally be performed by
% the function MTC_plotSignal, which will be called in this script, and
% given specific functional specifiers by it (although MTC_plotSignal
% should still be useable on its own, as in within simrun.m)
%
% 
%       Copyright (C) University of Oxford, 2017
%
% 
% Created by MT Cherukara, February 2017
%
% CHANGELOG:
%
% 2017-02-23 (MTC). Added GUI.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     (main) simAnalyse               %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function simAnalyse
    close all;
    
    % h - structure containing all ui element handles
    % r - structure containing all random parameter information
    global r
    
    % create figure
    fig = figure('Name','simAnalyse','OuterPosition',[200, 200, 800, 600]);
    
    
    % display some basic text
    h.tx00 = uicontrol('Style','Text',...
                       'Position',[250,480,300,20],...
                       'String','Analysis for Vessel Simulator Data',...
                       'FontSize',18);
                 
    % choose data file
    h.tx01 = uicontrol('Style','Text',...
                       'Position',[10,430,250,25],...
                       'String','Select phase data file to anaylse:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
    
    h.inpt = uicontrol('Style','Edit',...
                       'Position',[270,430,400,25],...
                       'String','Phase data file',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
    
    h.but1 = uicontrol('Style','Pushbutton',...
                       'Position',[680,430,100,25],...
                       'String','Browse...',...
                       'FontSize',14,...
                       'Callback',{@pickData,h});
                   
    % decide which sequences to plot using checkboxes
    h.tx10 = uicontrol('Style','Text',...
                       'Position',[20,390,150,25],...
                       'String','Sequences:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
    
    h.ch11 = uicontrol('Style','Checkbox',...
                       'Position',[30,360,150,25],...
                       'String','GE',...
                       'FontSize',14);
    
    h.ch12 = uicontrol('Style','Checkbox',...
                       'Position',[30,330,150,25],...
                       'String','GESSE',...
                       'FontSize',14);
                   
    h.ch13 = uicontrol('Style','Checkbox',...
                       'Position',[30,300,150,25],...
                       'String','ASE',...
                       'FontSize',14);
                   
    % other parameters
    h.tx20 = uicontrol('Style','Text',...
                       'Position',[200,390,150,25],...
                       'String','Analysis options:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
    
    h.ch21 = uicontrol('Style','Checkbox',...
                       'Position',[200,360,150,25],...
                       'String','Include T2 effects',...
                       'FontSize',14);
                   
                   
    % run analysis
    h.but0 = uicontrol('Style','Pushbutton',...
                       'Position',[650,20,130,60],...
                       'String','Run',...
                       'FontSize',20,...
                       'Callback',{@runAnalysis,h});
                   
    % saving stuff out
    
    
    
    
return;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     runAnalysis                     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function runAnalysis(src,event,h)
    % this runs the actual analysis of our data
    
    % first, read the users input, and load that dataset:
    filename = get(h.inpt,'String');
    disp(['Loading data from: ',filename]);
    load(filename);
    
    % default values for the parameters in r (this avoids having to use
    % else statements, and makes sure we don't screw up)
    r.plotGE        = 0;
    r.plotGESSE     = 0;
    r.plotASE       = 0;
    r.incT2         = 0;
    
    % then, get the values from the various check-boxes in the gui
    if get(h.ch11,'Value') == get(h.ch11,'Max')
        r.plotGE = 1;
    end
    if get(h.ch12,'Value') == get(h.ch12,'Max')
        r.plotGESSE = 1;
    end
    if get(h.ch13,'Value') == get(h.ch13,'Max')
        r.plotASE = 1;
    end
    
    if get(h.ch21,'Value') == get(h.ch21,'Max')
        disp('Including T2 effects');
    end
    
    % now, run the analysis:
    
    
    
return;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     GUI called functions            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function pickData(src,event,handles)
    % Let the user choose a data file to analyse
    [dataname,datadir] = uigetfile('*.mat','Select Vessel Simulation Dataset...');
    set(handles.inpt,'String',strcat(datadir,dataname));
return;

