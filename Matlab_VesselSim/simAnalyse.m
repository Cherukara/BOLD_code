% simAnalyse.m
% 
% Analysis of vessel simulation data generated by simrun.m (which calls the
% function simplevesselsim.m). This script should be a GUI-based anaylis
% tool, allowing the user to select a saved .mat file (which should contain
% 1 or 2 stored phase matrices, and a p structure containing all parameter
% information, and maybe some other stuff).
%
% The actual calculations of the anaylsis will generally be performed by
% the function MTC_plotSignal, which will be called in this script, and
% given specific functional specifiers by it (although MTC_plotSignal
% should still be useable on its own, as in within simrun.m)
%
% 
%       Copyright (C) University of Oxford, 2017
%
% 
% Created by MT Cherukara, February 2017
%
% CHANGELOG:
%
% 2017-02-23 (MTC). Added GUI.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     (main) simAnalyse               %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function simAnalyse
    close all;
    
    % h - structure containing all ui element handles
    % r - structure containing all random parameter information
    r.open = 1; % initialize the structure, because we refer to it later
    
    % create figure
    fig = figure(99);
    set(fig,'Name','simAnalyse','OuterPosition',[200, 200, 800, 600]);
    
    
    % Title Text
    h.tx00 = uicontrol('Style','Text',...
                       'Position',[100,480,600,30],...
                       'String','Analysis for Vessel Simulator Data',...
                       'FontSize',18);
                 
                   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%   Select data file
    
    % Text 'Select phase data file to analyse:'
    h.tx01 = uicontrol('Style','Text',...
                       'Position',[10,430,250,25],...
                       'String','Select phase data file to anaylse:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
    
    % Edit field
    h.inpt = uicontrol('Style','Edit',...
                       'Position',[270,430,400,25],...
                       'String','Phase data file',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
    
    % Browse button
    h.but1 = uicontrol('Style','Pushbutton',...
                       'Position',[680,430,100,25],...
                       'String','Browse...',...
                       'FontSize',14,...
                       'Callback',{@pickData,h});
                   
                   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%   Spin echo options - these are enabled by the checkboxes below
    
    % Text - 'TE'
    h.tx12 = uicontrol('Style','Text',...
                       'Position',[120,360,40,25],...
                       'String','TE:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
       
    % Edit field - TE - default 60 ms
    h.inTE = uicontrol('Style','Edit',...
                       'Position',[160,360,100,25],...
                       'String','60',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
    
    % Text - 'ms'
    h.tx13 = uicontrol('Style','Text',...
                       'Position',[260,360,40,25],...
                       'String','ms',...
                       'Fontsize',14,...
                       'HorizontalAlignment','Left');
     
    % Text - 'tau' (THIS CURRENTLY DOESN'T REALLY WORK)
    h.tx14 = uicontrol('Style','Text',...
                       'Position',[120,300,40,25],...
                       'String','tau:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
           
    % Edit field - Tau - default 2 ms
    h.inDT = uicontrol('Style','Edit',...
                       'Position',[160,300,100,25],...
                       'String','2',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right',...
                       'Enable','off');
         
    % Text - 'ms'
    h.tx15 = uicontrol('Style','Text',...
                       'Position',[260,300,40,25],...
                       'String','ms',...
                       'Fontsize',14,...
                       'HorizontalAlignment','Left'); 
                   
                   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%   Sequence selection
    
    % Section title text - 'Sequences'
    h.tx10 = uicontrol('Style','Text',...
                       'Position',[20,390,100,25],...
                       'String','Sequences:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
    
    % Checkbox - gradient echo - no callback
    h.ch10 = uicontrol('Style','Checkbox',...
                       'Position',[30,360,100,25],...
                       'String','GRE',...
                       'FontSize',14);
    
    % Checkbox - GESSE - no callback
    h.ch12 = uicontrol('Style','Checkbox',...
                       'Position',[30,330,100,25],...
                       'String','GESSE',...
                       'FontSize',14);
                   
    % Checkbox - ASE - switches the Tau field on or off
    h.ch13 = uicontrol('Style','Checkbox',...
                       'Position',[30,300,100,25],...
                       'String','ASE',...
                       'FontSize',14,...
                       'Callback',{@switchASE,h});
            
    % Checkbox - MASE (CURRENTLY NOT WORKING)
	h.ch14 = uicontrol('Style','Checkbox',...
                       'Position',[30,270,100,25],...
                       'String','MASE',...
                       'FontSize',14,...
                       'Enable','off');
                   
    % Checkbox - Further example (CURRENTLY NOT WORKING)
	h.ch14 = uicontrol('Style','Checkbox',...
                       'Position',[30,240,150,25],...
                       'String','another sequence',...
                       'FontSize',14,...
                       'Enable','off');
                  
                   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%   Analysis Options
    
    % Section title text - 'Analysis options:'
    h.tx20 = uicontrol('Style','Text',...
                       'Position',[400,390,150,25],...
                       'String','Analysis options:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
                   
    % Checkbox - aggregate - on by default
    h.chAG = uicontrol('Style','Checkbox',...
                       'Position',[400,360,250,25],...
                       'String','Aggregate repeated runs',...
                       'FontSize',14,...
                       'Value',1);
                   
    % Text - 'T2:' - for when T2 effects are included
	h.tx21 = uicontrol('Style','Text',...
                       'Position',[450,300,40,25],...
                       'String','T2:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
                   
    % Edit field - T2 - default 110 ms
	h.inT2 = uicontrol('Style','Edit',...
                       'Position',[490,300,60,25],...
                       'String','110',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right',...
                       'Enable','off');
                  
    % Text - 'ms'
	h.tx22 = uicontrol('Style','Text',...
                       'Position',[550,300,40,25],...
                       'String','ms',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
                   
    % Checkbox - T2 effects - switches on the T2 option above
    h.chT2 = uicontrol('Style','Checkbox',...
                       'Position',[400,330,200,25],...
                       'String','Include T2 effects',...
                       'FontSize',14,...
                       'Callback',{@switchT2,h});
                   
    % Checkbox - IV signal
    h.chIV = uicontrol('Style','Checkbox',...
                       'Position',[400,270,250,25],...
                       'String','Include Intravascular signal',...
                       'FontSize',14);
   
                   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%   Output options
    
    % Section title text - 'Output options:'
    h.tx30 = uicontrol('Style','Text',...
                       'Position',[30,120,150,25],...
                       'String','Output options:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
    
    % Text - 'Figure:' - for when Plot Graph is selected
    h.tx31 = uicontrol('Style','Text',...
                       'Position',[150,90,100,25],...
                       'String','Figure:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
    
    % Edit field - Figure number - default 1
    h.inFG = uicontrol('Style','Edit',...
                       'Position',[250,90,40,25],...
                       'String','1',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
                   
    % Text - 'Title:' - for when Plot Grah is selected
    h.tx32 = uicontrol('Style','Text',...
                       'Position',[300,90,50,25],...
                       'String','Title:',...
                       'FontSize',14,...
                       'HorizontalAlignment','Right');
    
    % Edit field - figure title - default BLANK
    h.inFT = uicontrol('Style','Edit',...
                       'Position',[350,90,250,25],...
                       'String','',...
                       'FontSize',14,...
                       'HorizontalAlignment','Left');
                   
    % Checkbox - plot analytical ASE signal - for when ASE is selected
    h.ch01 = uicontrol('Style','Checkbox',...
                       'Position',[60,60,250,25],...
                       'String','Also plot analytical ASE signal',...
                       'FontSize',14);   
    
    % Checkbox - plot graph - on by default - switches the Figure options
    h.ch31 = uicontrol('Style','Checkbox',...
                       'Position',[30,90,150,25],...
                       'String','Plot Graph',...
                       'FontSize',14,...
                       'Value',1,...
                       'Callback',{@switchPlot,h});
                   
    % Checkbox - save results - no callback
   	h.ch32 = uicontrol('Style','Checkbox',...
                       'Position',[30,30,150,25],...
                       'String','Save Results',...
                       'FontSize',14);
      
                   
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%   Go button - calls runAnalysis, which calls parses the rest of the
    %%%   inputs, loads the data, does some pre-processing (e.g. aggregate)
    %%%   and then sends it over to plotSignal actually process
    h.but0 = uicontrol('Style','Pushbutton',...
                       'Position',[650,20,130,60],...
                       'String','Plot',...
                       'FontSize',18,...
                       'Callback',{@runAnalysis,h});
                   
    
                  
return;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     runAnalysis                     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function runAnalysis(~,~,h)
    % this runs the actual analysis of our data
    
    % first, read the users input, and load that dataset:
    filename = get(h.inpt,'String');
    load(filename);
    
    % second, check user's selection of output options:
    r.display = get(h.ch31,'Value');
    r.fnum = str2double(get(h.inFG,'String'));
    r.ftit = get(h.inFT,'String');
    r.save = get(h.ch32,'Value');
    
    % and sequence/analysis options:
    r.plotFID       = get(h.ch10,'Value');
    r.plotGESSE     = get(h.ch12,'Value');
    r.plotASE       = get(h.ch13,'Value');
    r.incT2         = get(h.chT2,'Value');
    r.incIV         = get(h.chIV,'Value'); % we'll worry about this later
    r.plotAnalytic  = get(h.ch01,'Value');
    
    % then pull values from the form-fillable boxes:
    p.T2EV = 0.001*str2double(get(h.inT2,'String'));
    
    r.tau  = 0.001*str2num(get(h.inDT,'String')); %#ok<*ST2NM>
    r.TE   = 0.001*str2num(get(h.inTE,'String'));
        
    % check the value of tau supplied, if it's a single value, use it, if
    % it's a range, be careful
    if length(r.tau) == 1
        p.tau = r.tau;
        r.defineTau = 0;
    else
        r.defineTau = 1;
    end
    
    % not that we've loaded the data, we want to see how many stored-phase
    % type variables we have (either 1 or 2) 
    
    twoMats = 0; % the default will be to analyse only 1 set of values at a time
    
    pnames = who('*phase*','*Phase*'); % this will list all the variables with the word 'phase' in their name
    
    sp1 = eval(pnames{1}); % take the first 'phase' variable
    
    if length(pnames) > 1
        twoMats = 1; % we'll use this later to repeat the analysis process
        sp2 = eval(pnames{2}); % if there are more than 3, tough...
    end
    
    % check whether the user has specified aggregating repeated runs, for
    % now, aggregate regardless of what was selected, because analysis is
    % only set up for 2D phase matrices
    if get(h.chAG,'Value') == get(h.chAG,'Max')
        sp1 = aggregate(sp1);
        if twoMats
            sp2 = aggregate(sp2);
        end
    else
        disp('You must aggregate repeated runs...');
        sp1 = aggregate(sp1);
        if twoMats
            sp2 = aggregate(sp2);
        end
    end
    
    % finally, run the analysis for all TE values given:
    for ii = 1:length(r.TE)
        p.TE = r.TE(ii);
        
        plotSignal(sp1,p,r);
        if twoMats
            plotSignal(sp2,p,r);
        end
    end
        
    
return;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     GUI called functions            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function pickData(~,~,handles)
    % Let the user choose a data file to analyse
    [dataname,datadir] = uigetfile('*.mat','Select Vessel Simulation Dataset...');
    set(handles.inpt,'String',strcat(datadir,dataname));
return;

function switchASE(src,~,handles)
    % turn on the field for entering delta tau if ASE is ticked
    if get(src,'Value') == get(src,'Max')
        set(handles.inDT,'Enable','on');
    else
        set(handles.inDT,'Enable','off');
    end
return;

function switchT2(src,~,handles)
    % turn on the field for entering  T2, if T2 effects are included
    if get(src,'Value') == get(src,'Max')
        set(handles.inT2,'Enable','on');
    else
        set(handles.inT2,'Enable','off');
    end
return;

function switchPlot(src,~,handles)
    % turn on the field for entering figure number and title
    if get(src,'Value') == get(src,'Max')
        set(handles.inFG,'Enable','on');
        set(handles.inFT,'Enable','on');
        set(handles.ch01,'Enable','on');
    else
        set(handles.inFG,'Enable','off');
        set(handles.inFT,'Enable','off');
        set(handles.ch01,'Enable','off');
    end    

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%     other useful functions          %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function matrix2D = aggregate(matrix3D)
    % converts a 3D matrix M-by-N-by-P into a 2D matrix M-by-(N*P), for
    % sorting out those data sets where we performed separate runs, which
    % were useful for plotting standard deviation and stuff, but aren't
    % what we want to do generally.
    
    sz = size(matrix3D);
    
    % check that the input matrix is actually 3D, otherwise return it
    if length(sz) ~= 3
        matrix2D = matrix3D;
    else
        matrix2D = reshape(matrix3D,sz(1),(sz(2)*sz(3)));
    end
return;